{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "FundMe__Unauthorized",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x847cc58184972bbfb2d7acf10ec2f4e80ccf89649392d0caae0d8fc3a9370e95",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "920269",
    "logsBloom": "0x
    "blockHash": "0xfb7540ac555d7f4517da97ea5ba61d799da1d74b1e36a8e8db36dbf296281899",
    "transactionHash": "0x847cc58184972bbfb2d7acf10ec2f4e80ccf89649392d0caae0d8fc3a9370e95",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "920269",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "77cdd2beaeac7f5461ecd8675ba08888",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"FundMe__Unauthorized\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\ncontract FundMe {\\r\\n\\r\\n    address immutable owner;\\r\\n\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    uint256 public constant minimumUSD = 50*1e18;\\r\\n\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n\\r\\n    address[] public funders;\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n\\r\\n    error FundMe__Unauthorized(string message);\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        // require(msg.sender == owner);\\r\\n        if(msg.sender != owner) {\\r\\n            revert FundMe__Unauthorized(\\\"Not Owner\\\");\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function fund() public payable{\\r\\n        // Set a minimum fund amount in USD\\r\\n\\r\\n        // 1. How do we send ETH to this contract\\r\\n        \\r\\n        // Every transaction that we send will have the following fields:\\r\\n        // 1. nonce - tx count for the account\\r\\n        // 2. gas price - price per unit of gas in wei\\r\\n        // 3. gas limit - max gas that this transaction can use\\r\\n        // 4. to - address that the transaction is sent to\\r\\n        // 5. value - amount of wei to send\\r\\n        // 6. data - what to send to the 'to' address\\r\\n        // 7. v,r,s - cryptographic components of the transaction signature\\r\\n\\r\\n        require(msg.value.getConversionRate(priceFeed) >= minimumUSD, \\\"Not enough Ether sent!\\\");\\r\\n        // require(PriceConverter.getConversionRate(msg.value) > minimumUSD, \\\"Not enough Ether sent!\\\"); //Alternate way\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender] = msg.value;\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner{\\r\\n        for(uint i=0; i< funders.length; i++) {\\r\\n            addressToAmountFunded[funders[i]] = 0;\\r\\n        }\\r\\n        // Resetting the funders array\\r\\n        funders = new address[](0);\\r\\n\\r\\n        // Withdraw funds to the caller\\r\\n        // We can use either of:\\r\\n        // 1. transfer - send token from the contract to msg.sender\\r\\n        // can use 2300 gas only else it fails, it throws an error if it fails\\r\\n        // automatically reverts if the transaction fails\\r\\n        payable(msg.sender).transfer(address(this).balance);\\r\\n        // 2. send - can use 2300 gas, \\r\\n        // If gas consumption is more than 2300, it fails\\r\\n        // returns a bool value telling if the transaction is successful or failed \\r\\n        // have to use require() to check if the transaction succeeded\\r\\n        bool success = payable(msg.sender).send(address(this).balance);\\r\\n        require(success, \\\"Ether send failed\\\");\\r\\n        // 3. call - forwards all gas so it does NOT have a capped gas\\r\\n        // returns bool,\\r\\n        // We can use this function to make low-level calls to any function without even having the ABI\\r\\n        (bool callSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n}\",\"keccak256\":\"0xa133cfecabffbbcaf0580d0ad9fc6ba8bf460006facfad0401ba3393564138df\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    \\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\r\\n        // Address 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\r\\n        \\r\\n        (, int price,,,) = priceFeed.latestRoundData();\\r\\n        // Price of ETH in terms of USD\\r\\n        return uint256(price*1e10);\\r\\n    }\\r\\n\\r\\n    function getVersion() internal view returns(uint256){\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\r\\n        return priceFeed.version();\\r\\n    }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256) {\\r\\n      uint256 ethPrice = getPrice(priceFeed);\\r\\n      uint256 ethAmountInUsd = (ethPrice * ethAmount)/1e18;\\r\\n      return ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xe043d3d0b64f7d9878ec9d69e1fa4f65f3081206f48e2143fe34570ee4b554b9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620010b1380380620010b183398181016040528101906200003791906200011c565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e482620000b7565b9050919050565b620000f681620000d7565b81146200010257600080fd5b50565b6000815190506200011681620000eb565b92915050565b600060208284031215620001355762000134620000b2565b5b6000620001458482850162000105565b91505092915050565b608051610f476200016a60003960006102990152610f476000f3fe6080604052600436106100595760003560e01c80633430a88c146100725780633ccfd60b1461009d5780633e47d6f3146100b4578063741bef1a146100f1578063b60d42881461011c578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b5061008761028a565b60405161009491906107b3565b60405180910390f35b3480156100a957600080fd5b506100b2610297565b005b3480156100c057600080fd5b506100db60048036038101906100d69190610831565b61059c565b6040516100e891906107b3565b60405180910390f35b3480156100fd57600080fd5b506101066105b4565b60405161011391906108bd565b60405180910390f35b610124610163565b005b34801561013257600080fd5b5061014d60048036038101906101489190610904565b6105d8565b60405161015a9190610940565b60405180910390f35b6802b5e3af16b18800006101a060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061790919063ffffffff16565b10156101e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d8906109b8565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610325576040517f01a5bd8800000000000000000000000000000000000000000000000000000000815260040161031c90610a24565b60405180910390fd5b60005b6001805490508110156103cb576000600260006001848154811061034f5761034e610a44565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103c390610aa2565b915050610328565b50600067ffffffffffffffff8111156103e7576103e6610aeb565b5b6040519080825280602002602001820160405280156104155781602001602082028036833780820191505090505b506001908051906020019061042b9291906106f3565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610472573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050509050806104ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e390610b66565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161051290610bb7565b60006040518083038185875af1925050503d806000811461054f576040519150601f19603f3d011682016040523d82523d6000602084013e610554565b606091505b5050905080610598576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058f90610c18565b60405180910390fd5b5050565b60026020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106105e857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061062383610653565b90506000670de0b6b3a7640000858361063c9190610c38565b6106469190610cc1565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561069c57600080fd5b505afa1580156106b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d49190610d7f565b5050509150506402540be400816106eb9190610dfa565b915050919050565b82805482825590600052602060002090810192821561076c579160200282015b8281111561076b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610713565b5b509050610779919061077d565b5090565b5b8082111561079657600081600090555060010161077e565b5090565b6000819050919050565b6107ad8161079a565b82525050565b60006020820190506107c860008301846107a4565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107fe826107d3565b9050919050565b61080e816107f3565b811461081957600080fd5b50565b60008135905061082b81610805565b92915050565b600060208284031215610847576108466107ce565b5b60006108558482850161081c565b91505092915050565b6000819050919050565b600061088361087e610879846107d3565b61085e565b6107d3565b9050919050565b600061089582610868565b9050919050565b60006108a78261088a565b9050919050565b6108b78161089c565b82525050565b60006020820190506108d260008301846108ae565b92915050565b6108e18161079a565b81146108ec57600080fd5b50565b6000813590506108fe816108d8565b92915050565b60006020828403121561091a576109196107ce565b5b6000610928848285016108ef565b91505092915050565b61093a816107f3565b82525050565b60006020820190506109556000830184610931565b92915050565b600082825260208201905092915050565b7f4e6f7420656e6f7567682045746865722073656e742100000000000000000000600082015250565b60006109a260168361095b565b91506109ad8261096c565b602082019050919050565b600060208201905081810360008301526109d181610995565b9050919050565b7f4e6f74204f776e65720000000000000000000000000000000000000000000000600082015250565b6000610a0e60098361095b565b9150610a19826109d8565b602082019050919050565b60006020820190508181036000830152610a3d81610a01565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aad8261079a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ae057610adf610a73565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f45746865722073656e64206661696c6564000000000000000000000000000000600082015250565b6000610b5060118361095b565b9150610b5b82610b1a565b602082019050919050565b60006020820190508181036000830152610b7f81610b43565b9050919050565b600081905092915050565b50565b6000610ba1600083610b86565b9150610bac82610b91565b600082019050919050565b6000610bc282610b94565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c02600b8361095b565b9150610c0d82610bcc565b602082019050919050565b60006020820190508181036000830152610c3181610bf5565b9050919050565b6000610c438261079a565b9150610c4e8361079a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c8757610c86610a73565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ccc8261079a565b9150610cd78361079a565b925082610ce757610ce6610c92565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d1181610cf2565b8114610d1c57600080fd5b50565b600081519050610d2e81610d08565b92915050565b6000819050919050565b610d4781610d34565b8114610d5257600080fd5b50565b600081519050610d6481610d3e565b92915050565b600081519050610d79816108d8565b92915050565b600080600080600060a08688031215610d9b57610d9a6107ce565b5b6000610da988828901610d1f565b9550506020610dba88828901610d55565b9450506040610dcb88828901610d6a565b9350506060610ddc88828901610d6a565b9250506080610ded88828901610d1f565b9150509295509295909350565b6000610e0582610d34565b9150610e1083610d34565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e4f57610e4e610a73565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8c57610e8b610a73565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ec957610ec8610a73565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f0657610f05610a73565b5b82820290509291505056fea2646970667358221220b04237a8791ef2e7e7841b6faaa547a2990ca5f11931f8c0eb52c52d698ee0f064736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80633430a88c146100725780633ccfd60b1461009d5780633e47d6f3146100b4578063741bef1a146100f1578063b60d42881461011c578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b5061008761028a565b60405161009491906107b3565b60405180910390f35b3480156100a957600080fd5b506100b2610297565b005b3480156100c057600080fd5b506100db60048036038101906100d69190610831565b61059c565b6040516100e891906107b3565b60405180910390f35b3480156100fd57600080fd5b506101066105b4565b60405161011391906108bd565b60405180910390f35b610124610163565b005b34801561013257600080fd5b5061014d60048036038101906101489190610904565b6105d8565b60405161015a9190610940565b60405180910390f35b6802b5e3af16b18800006101a060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061790919063ffffffff16565b10156101e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d8906109b8565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610325576040517f01a5bd8800000000000000000000000000000000000000000000000000000000815260040161031c90610a24565b60405180910390fd5b60005b6001805490508110156103cb576000600260006001848154811061034f5761034e610a44565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103c390610aa2565b915050610328565b50600067ffffffffffffffff8111156103e7576103e6610aeb565b5b6040519080825280602002602001820160405280156104155781602001602082028036833780820191505090505b506001908051906020019061042b9291906106f3565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610472573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050509050806104ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e390610b66565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161051290610bb7565b60006040518083038185875af1925050503d806000811461054f576040519150601f19603f3d011682016040523d82523d6000602084013e610554565b606091505b5050905080610598576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058f90610c18565b60405180910390fd5b5050565b60026020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106105e857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061062383610653565b90506000670de0b6b3a7640000858361063c9190610c38565b6106469190610cc1565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561069c57600080fd5b505afa1580156106b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d49190610d7f565b5050509150506402540be400816106eb9190610dfa565b915050919050565b82805482825590600052602060002090810192821561076c579160200282015b8281111561076b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610713565b5b509050610779919061077d565b5090565b5b8082111561079657600081600090555060010161077e565b5090565b6000819050919050565b6107ad8161079a565b82525050565b60006020820190506107c860008301846107a4565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107fe826107d3565b9050919050565b61080e816107f3565b811461081957600080fd5b50565b60008135905061082b81610805565b92915050565b600060208284031215610847576108466107ce565b5b60006108558482850161081c565b91505092915050565b6000819050919050565b600061088361087e610879846107d3565b61085e565b6107d3565b9050919050565b600061089582610868565b9050919050565b60006108a78261088a565b9050919050565b6108b78161089c565b82525050565b60006020820190506108d260008301846108ae565b92915050565b6108e18161079a565b81146108ec57600080fd5b50565b6000813590506108fe816108d8565b92915050565b60006020828403121561091a576109196107ce565b5b6000610928848285016108ef565b91505092915050565b61093a816107f3565b82525050565b60006020820190506109556000830184610931565b92915050565b600082825260208201905092915050565b7f4e6f7420656e6f7567682045746865722073656e742100000000000000000000600082015250565b60006109a260168361095b565b91506109ad8261096c565b602082019050919050565b600060208201905081810360008301526109d181610995565b9050919050565b7f4e6f74204f776e65720000000000000000000000000000000000000000000000600082015250565b6000610a0e60098361095b565b9150610a19826109d8565b602082019050919050565b60006020820190508181036000830152610a3d81610a01565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aad8261079a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ae057610adf610a73565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f45746865722073656e64206661696c6564000000000000000000000000000000600082015250565b6000610b5060118361095b565b9150610b5b82610b1a565b602082019050919050565b60006020820190508181036000830152610b7f81610b43565b9050919050565b600081905092915050565b50565b6000610ba1600083610b86565b9150610bac82610b91565b600082019050919050565b6000610bc282610b94565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c02600b8361095b565b9150610c0d82610bcc565b602082019050919050565b60006020820190508181036000830152610c3181610bf5565b9050919050565b6000610c438261079a565b9150610c4e8361079a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c8757610c86610a73565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ccc8261079a565b9150610cd78361079a565b925082610ce757610ce6610c92565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d1181610cf2565b8114610d1c57600080fd5b50565b600081519050610d2e81610d08565b92915050565b6000819050919050565b610d4781610d34565b8114610d5257600080fd5b50565b600081519050610d6481610d3e565b92915050565b600081519050610d79816108d8565b92915050565b600080600080600060a08688031215610d9b57610d9a6107ce565b5b6000610da988828901610d1f565b9550506020610dba88828901610d55565b9450506040610dcb88828901610d6a565b9350506060610ddc88828901610d6a565b9250506080610ded88828901610d1f565b9150509295509295909350565b6000610e0582610d34565b9150610e1083610d34565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e4f57610e4e610a73565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8c57610e8b610a73565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ec957610ec8610a73565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f0657610f05610a73565b5b82820290509291505056fea2646970667358221220b04237a8791ef2e7e7841b6faaa547a2990ca5f11931f8c0eb52c52d698ee0f064736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}